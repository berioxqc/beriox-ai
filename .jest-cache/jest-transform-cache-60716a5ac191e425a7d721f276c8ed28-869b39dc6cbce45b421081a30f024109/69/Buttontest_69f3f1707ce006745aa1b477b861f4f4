f178b3c0f905785334623be128f8c484
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
require("@testing-library/jest-dom");
const _Button = /*#__PURE__*/ _interop_require_default(require("./Button"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('Button Component', ()=>{
    it('renders with default props', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            children: "Click me"
        }));
        const button = _react.screen.getByRole('button', {
            name: /click me/i
        });
        expect(button).toBeInTheDocument();
        expect(button).toHaveClass('bg-gradient-to-r', 'from-purple-600', 'to-blue-600');
    });
    it('renders with different variants', ()=>{
        const { rerender } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "primary",
            children: "Primary"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('bg-gradient-to-r', 'from-purple-600', 'to-blue-600');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "secondary",
            children: "Secondary"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('bg-gray-100');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "outline",
            children: "Outline"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('border-2', 'border-purple-600');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "ghost",
            children: "Ghost"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('text-gray-700');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "danger",
            children: "Danger"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('bg-red-600');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            variant: "success",
            children: "Success"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('bg-green-600');
    });
    it('renders with different sizes', ()=>{
        const { rerender } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            size: "sm",
            children: "Small"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('px-3', 'py-1.5', 'text-sm');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            size: "md",
            children: "Medium"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('px-4', 'py-2', 'text-sm');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            size: "lg",
            children: "Large"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('px-6', 'py-3', 'text-base');
        rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            size: "xl",
            children: "Extra Large"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('px-8', 'py-4', 'text-lg');
    });
    it('handles click events', ()=>{
        const handleClick = jest.fn();
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            onClick: handleClick,
            children: "Click me"
        }));
        _react.fireEvent.click(_react.screen.getByRole('button'));
        expect(handleClick).toHaveBeenCalledTimes(1);
    });
    it('can be disabled', ()=>{
        const handleClick = jest.fn();
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            disabled: true,
            onClick: handleClick,
            children: "Disabled"
        }));
        const button = _react.screen.getByRole('button');
        expect(button).toBeDisabled();
        _react.fireEvent.click(button);
        expect(handleClick).not.toHaveBeenCalled();
    });
    it('renders with loading state', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            loading: true,
            children: "Loading"
        }));
        const button = _react.screen.getByRole('button');
        expect(button).toBeDisabled();
        expect(button).toHaveClass('disabled:opacity-50', 'disabled:cursor-not-allowed');
    });
    it('renders with icon', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            icon: "plus",
            children: "Add Item"
        }));
        const button = _react.screen.getByRole('button');
        expect(button).toHaveTextContent('Add Item');
    // Note: Icon testing would require checking for SVG elements
    });
    it('applies custom className', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            className: "custom-class",
            children: "Custom"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('custom-class');
    });
    it('renders with full width', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.default, {
            fullWidth: true,
            children: "Full Width"
        }));
        expect(_react.screen.getByRole('button')).toHaveClass('w-full');
    });
});

//# sourceMappingURL=data:application/json;base64,