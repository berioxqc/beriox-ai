5ef508eb714f0f249bdff5a177c08eb9
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _Icon = /*#__PURE__*/ _interop_require_default(require("./Icon"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const Button = ({ variant = 'primary', size = 'md', icon, iconPosition = 'left', loading = false, fullWidth = false, children, className = '', disabled, ...props })=>{
    const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';
    const variantClasses = {
        primary: 'bg-gradient-to-r from-purple-600 to-blue-600 text-white hover:from-purple-700 hover:to-blue-700 focus:ring-purple-500 shadow-lg hover:shadow-xl',
        secondary: 'bg-gray-100 text-gray-900 hover:bg-gray-200 focus:ring-gray-500 border border-gray-300',
        outline: 'border-2 border-purple-600 text-purple-600 hover:bg-purple-600 hover:text-white focus:ring-purple-500',
        ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',
        danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 shadow-lg hover:shadow-xl',
        success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500 shadow-lg hover:shadow-xl'
    };
    const sizeClasses = {
        sm: 'px-3 py-1.5 text-sm gap-1.5',
        md: 'px-4 py-2 text-sm gap-2',
        lg: 'px-6 py-3 text-base gap-2',
        xl: 'px-8 py-4 text-lg gap-3'
    };
    const widthClass = fullWidth ? 'w-full' : '';
    const classes = [
        baseClasses,
        variantClasses[variant],
        sizeClasses[size],
        widthClass,
        className
    ].filter(Boolean).join(' ');
    const iconSize = {
        sm: 16,
        md: 18,
        lg: 20,
        xl: 24
    }[size];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
        className: classes,
        disabled: disabled || loading,
        ...props,
        children: [
            loading && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "animate-spin rounded-full border-2 border-current border-t-transparent",
                style: {
                    width: iconSize,
                    height: iconSize
                }
            }),
            !loading && icon && iconPosition === 'left' && /*#__PURE__*/ (0, _jsxruntime.jsx)(_Icon.default, {
                name: icon,
                size: iconSize
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                children: children
            }),
            !loading && icon && iconPosition === 'right' && /*#__PURE__*/ (0, _jsxruntime.jsx)(_Icon.default, {
                name: icon,
                size: iconSize
            })
        ]
    });
};
const _default = Button;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZWFuLWZyYW5jb2lzcmlvdXgtYmVyZ2Vyb24vYmVyaW94LWFpL3NyYy9jb21wb25lbnRzL3VpL0J1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJY29uIGZyb20gJy4vSWNvbic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uUHJvcHMgZXh0ZW5kcyBSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4ge1xuICB2YXJpYW50PzogJ3ByaW1hcnknIHwgJ3NlY29uZGFyeScgfCAnb3V0bGluZScgfCAnZ2hvc3QnIHwgJ2RhbmdlcicgfCAnc3VjY2Vzcyc7XG4gIHNpemU/OiAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnO1xuICBpY29uPzogc3RyaW5nO1xuICBpY29uUG9zaXRpb24/OiAnbGVmdCcgfCAncmlnaHQnO1xuICBsb2FkaW5nPzogYm9vbGVhbjtcbiAgZnVsbFdpZHRoPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn1cblxuY29uc3QgQnV0dG9uOiBSZWFjdC5GQzxCdXR0b25Qcm9wcz4gPSAoe1xuICB2YXJpYW50ID0gJ3ByaW1hcnknLFxuICBzaXplID0gJ21kJyxcbiAgaWNvbixcbiAgaWNvblBvc2l0aW9uID0gJ2xlZnQnLFxuICBsb2FkaW5nID0gZmFsc2UsXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICBjaGlsZHJlbixcbiAgY2xhc3NOYW1lID0gJycsXG4gIGRpc2FibGVkLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICBjb25zdCBiYXNlQ2xhc3NlcyA9ICdpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZm9udC1tZWRpdW0gcm91bmRlZC1sZyB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLW9mZnNldC0yIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkJztcbiAgXG4gIGNvbnN0IHZhcmlhbnRDbGFzc2VzID0ge1xuICAgIHByaW1hcnk6ICdiZy1ncmFkaWVudC10by1yIGZyb20tcHVycGxlLTYwMCB0by1ibHVlLTYwMCB0ZXh0LXdoaXRlIGhvdmVyOmZyb20tcHVycGxlLTcwMCBob3Zlcjp0by1ibHVlLTcwMCBmb2N1czpyaW5nLXB1cnBsZS01MDAgc2hhZG93LWxnIGhvdmVyOnNoYWRvdy14bCcsXG4gICAgc2Vjb25kYXJ5OiAnYmctZ3JheS0xMDAgdGV4dC1ncmF5LTkwMCBob3ZlcjpiZy1ncmF5LTIwMCBmb2N1czpyaW5nLWdyYXktNTAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAnLFxuICAgIG91dGxpbmU6ICdib3JkZXItMiBib3JkZXItcHVycGxlLTYwMCB0ZXh0LXB1cnBsZS02MDAgaG92ZXI6YmctcHVycGxlLTYwMCBob3Zlcjp0ZXh0LXdoaXRlIGZvY3VzOnJpbmctcHVycGxlLTUwMCcsXG4gICAgZ2hvc3Q6ICd0ZXh0LWdyYXktNzAwIGhvdmVyOmJnLWdyYXktMTAwIGZvY3VzOnJpbmctZ3JheS01MDAnLFxuICAgIGRhbmdlcjogJ2JnLXJlZC02MDAgdGV4dC13aGl0ZSBob3ZlcjpiZy1yZWQtNzAwIGZvY3VzOnJpbmctcmVkLTUwMCBzaGFkb3ctbGcgaG92ZXI6c2hhZG93LXhsJyxcbiAgICBzdWNjZXNzOiAnYmctZ3JlZW4tNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctZ3JlZW4tNzAwIGZvY3VzOnJpbmctZ3JlZW4tNTAwIHNoYWRvdy1sZyBob3ZlcjpzaGFkb3cteGwnXG4gIH07XG5cbiAgY29uc3Qgc2l6ZUNsYXNzZXMgPSB7XG4gICAgc206ICdweC0zIHB5LTEuNSB0ZXh0LXNtIGdhcC0xLjUnLFxuICAgIG1kOiAncHgtNCBweS0yIHRleHQtc20gZ2FwLTInLFxuICAgIGxnOiAncHgtNiBweS0zIHRleHQtYmFzZSBnYXAtMicsXG4gICAgeGw6ICdweC04IHB5LTQgdGV4dC1sZyBnYXAtMydcbiAgfTtcblxuICBjb25zdCB3aWR0aENsYXNzID0gZnVsbFdpZHRoID8gJ3ctZnVsbCcgOiAnJztcbiAgXG4gIGNvbnN0IGNsYXNzZXMgPSBbXG4gICAgYmFzZUNsYXNzZXMsXG4gICAgdmFyaWFudENsYXNzZXNbdmFyaWFudF0sXG4gICAgc2l6ZUNsYXNzZXNbc2l6ZV0sXG4gICAgd2lkdGhDbGFzcyxcbiAgICBjbGFzc05hbWVcbiAgXS5maWx0ZXIoQm9vbGVhbikuam9pbignICcpO1xuXG4gIGNvbnN0IGljb25TaXplID0ge1xuICAgIHNtOiAxNixcbiAgICBtZDogMTgsXG4gICAgbGc6IDIwLFxuICAgIHhsOiAyNFxuICB9W3NpemVdO1xuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzfVxuICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkIHx8IGxvYWRpbmd9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2xvYWRpbmcgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuaW1hdGUtc3BpbiByb3VuZGVkLWZ1bGwgYm9yZGVyLTIgYm9yZGVyLWN1cnJlbnQgYm9yZGVyLXQtdHJhbnNwYXJlbnRcIiBzdHlsZT17eyB3aWR0aDogaWNvblNpemUsIGhlaWdodDogaWNvblNpemUgfX0gLz5cbiAgICAgICl9XG4gICAgICBcbiAgICAgIHshbG9hZGluZyAmJiBpY29uICYmIGljb25Qb3NpdGlvbiA9PT0gJ2xlZnQnICYmIChcbiAgICAgICAgPEljb24gbmFtZT17aWNvbn0gc2l6ZT17aWNvblNpemV9IC8+XG4gICAgICApfVxuICAgICAgXG4gICAgICA8c3Bhbj57Y2hpbGRyZW59PC9zcGFuPlxuICAgICAgXG4gICAgICB7IWxvYWRpbmcgJiYgaWNvbiAmJiBpY29uUG9zaXRpb24gPT09ICdyaWdodCcgJiYgKFxuICAgICAgICA8SWNvbiBuYW1lPXtpY29ufSBzaXplPXtpY29uU2l6ZX0gLz5cbiAgICAgICl9XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG4iXSwibmFtZXMiOlsiQnV0dG9uIiwidmFyaWFudCIsInNpemUiLCJpY29uIiwiaWNvblBvc2l0aW9uIiwibG9hZGluZyIsImZ1bGxXaWR0aCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiZGlzYWJsZWQiLCJwcm9wcyIsImJhc2VDbGFzc2VzIiwidmFyaWFudENsYXNzZXMiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5Iiwib3V0bGluZSIsImdob3N0IiwiZGFuZ2VyIiwic3VjY2VzcyIsInNpemVDbGFzc2VzIiwic20iLCJtZCIsImxnIiwieGwiLCJ3aWR0aENsYXNzIiwiY2xhc3NlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiaWNvblNpemUiLCJidXR0b24iLCJkaXYiLCJzdHlsZSIsIndpZHRoIiwiaGVpZ2h0IiwiSWNvbiIsIm5hbWUiLCJzcGFuIl0sIm1hcHBpbmdzIjoiOzs7OytCQW1GQTs7O2VBQUE7Ozs7OERBbkZrQjs2REFDRDs7Ozs7O0FBWWpCLE1BQU1BLFNBQWdDLENBQUMsRUFDckNDLFVBQVUsU0FBUyxFQUNuQkMsT0FBTyxJQUFJLEVBQ1hDLElBQUksRUFDSkMsZUFBZSxNQUFNLEVBQ3JCQyxVQUFVLEtBQUssRUFDZkMsWUFBWSxLQUFLLEVBQ2pCQyxRQUFRLEVBQ1JDLFlBQVksRUFBRSxFQUNkQyxRQUFRLEVBQ1IsR0FBR0MsT0FDSjtJQUNDLE1BQU1DLGNBQWM7SUFFcEIsTUFBTUMsaUJBQWlCO1FBQ3JCQyxTQUFTO1FBQ1RDLFdBQVc7UUFDWEMsU0FBUztRQUNUQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsU0FBUztJQUNYO0lBRUEsTUFBTUMsY0FBYztRQUNsQkMsSUFBSTtRQUNKQyxJQUFJO1FBQ0pDLElBQUk7UUFDSkMsSUFBSTtJQUNOO0lBRUEsTUFBTUMsYUFBYWxCLFlBQVksV0FBVztJQUUxQyxNQUFNbUIsVUFBVTtRQUNkZDtRQUNBQyxjQUFjLENBQUNYLFFBQVE7UUFDdkJrQixXQUFXLENBQUNqQixLQUFLO1FBQ2pCc0I7UUFDQWhCO0tBQ0QsQ0FBQ2tCLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBRXZCLE1BQU1DLFdBQVc7UUFDZlQsSUFBSTtRQUNKQyxJQUFJO1FBQ0pDLElBQUk7UUFDSkMsSUFBSTtJQUNOLENBQUMsQ0FBQ3JCLEtBQUs7SUFFUCxxQkFDRSxzQkFBQzRCO1FBQ0N0QixXQUFXaUI7UUFDWGhCLFVBQVVBLFlBQVlKO1FBQ3JCLEdBQUdLLEtBQUs7O1lBRVJMLHlCQUNDLHFCQUFDMEI7Z0JBQUl2QixXQUFVO2dCQUF5RXdCLE9BQU87b0JBQUVDLE9BQU9KO29CQUFVSyxRQUFRTDtnQkFBUzs7WUFHcEksQ0FBQ3hCLFdBQVdGLFFBQVFDLGlCQUFpQix3QkFDcEMscUJBQUMrQixhQUFJO2dCQUFDQyxNQUFNakM7Z0JBQU1ELE1BQU0yQjs7MEJBRzFCLHFCQUFDUTswQkFBTTlCOztZQUVOLENBQUNGLFdBQVdGLFFBQVFDLGlCQUFpQix5QkFDcEMscUJBQUMrQixhQUFJO2dCQUFDQyxNQUFNakM7Z0JBQU1ELE1BQU0yQjs7OztBQUloQztNQUVBLFdBQWU3QiJ9