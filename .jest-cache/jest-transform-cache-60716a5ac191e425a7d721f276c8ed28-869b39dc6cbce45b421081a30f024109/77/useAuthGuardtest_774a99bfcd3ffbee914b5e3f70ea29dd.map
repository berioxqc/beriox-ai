{"version":3,"sources":["/Users/jean-francoisrioux-bergeron/beriox-ai/src/__tests__/temp/useAuthGuard.test.tsx"],"sourcesContent":["import { renderHook, waitFor } from '@testing-library/react'\nimport { useAuthGuard } from './useAuthGuard'\n\n// Mock NextAuth\njest.mock('next-auth/react', () => ({\n  useSession: jest.fn(),\n}))\n\n// Mock Next.js navigation\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n  }),\n}))\n\ndescribe('useAuthGuard Hook', () => {\n  const mockUseSession = require('next-auth/react').useSession\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('returns correct state when user is authenticated', () => {\n    mockUseSession.mockReturnValue({\n      data: { user: { email: 'test@example.com' } },\n      status: 'authenticated',\n    })\n\n    const { result } = renderHook(() => useAuthGuard())\n\n    expect(result.current.isAuthenticated).toBe(true)\n    expect(result.current.isLoading).toBe(false)\n    expect(result.current.showLimitedContent).toBe(false)\n    expect(result.current.user).toEqual({ email: 'test@example.com' })\n  })\n\n  it('returns correct state when user is not authenticated', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'unauthenticated',\n    })\n\n    const { result } = renderHook(() => useAuthGuard())\n\n    expect(result.current.isAuthenticated).toBe(false)\n    expect(result.current.isLoading).toBe(false)\n    expect(result.current.showLimitedContent).toBe(true)\n    expect(result.current.user).toBeUndefined()\n  })\n\n  it('returns loading state when session is loading', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'loading',\n    })\n\n    const { result } = renderHook(() => useAuthGuard())\n\n    expect(result.current.isLoading).toBe(true)\n  })\n\n  it('handles requireAuth option correctly', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'unauthenticated',\n    })\n\n    const mockPush = jest.fn()\n    jest.spyOn(require('next/navigation'), 'useRouter').mockReturnValue({\n      push: mockPush,\n    })\n\n    renderHook(() => useAuthGuard({ requireAuth: true }))\n\n    expect(mockPush).toHaveBeenCalledWith('/auth/signin')\n  })\n\n  it('does not redirect when requireAuth is false', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'unauthenticated',\n    })\n\n    const mockPush = jest.fn()\n    jest.spyOn(require('next/navigation'), 'useRouter').mockReturnValue({\n      push: mockPush,\n    })\n\n    renderHook(() => useAuthGuard({ requireAuth: false }))\n\n    expect(mockPush).not.toHaveBeenCalled()\n  })\n\n  it('uses custom redirectTo when provided', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'unauthenticated',\n    })\n\n    const mockPush = jest.fn()\n    jest.spyOn(require('next/navigation'), 'useRouter').mockReturnValue({\n      push: mockPush,\n    })\n\n    renderHook(() => useAuthGuard({ \n      requireAuth: true, \n      redirectTo: '/custom-login' \n    }))\n\n    expect(mockPush).toHaveBeenCalledWith('/custom-login')\n  })\n\n  it('disables limited content when showLimitedContent is false', () => {\n    mockUseSession.mockReturnValue({\n      data: null,\n      status: 'unauthenticated',\n    })\n\n    const { result } = renderHook(() => useAuthGuard({ \n      showLimitedContent: false \n    }))\n\n    expect(result.current.showLimitedContent).toBe(false)\n  })\n})\n"],"names":["jest","mock","useSession","fn","useRouter","push","describe","mockUseSession","require","beforeEach","clearAllMocks","it","mockReturnValue","data","user","email","status","result","renderHook","useAuthGuard","expect","current","isAuthenticated","toBe","isLoading","showLimitedContent","toEqual","toBeUndefined","mockPush","spyOn","requireAuth","toHaveBeenCalledWith","not","toHaveBeenCalled","redirectTo"],"mappings":"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"}