503f14f47a7d4767de4bd68e4eb25bbd
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _DesignSystem = require("../DesignSystem");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('DesignSystem', ()=>{
    describe('Typography', ()=>{
        it('renders h1 correctly', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Typography.h1, {
                children: "Test Heading"
            }));
            expect(_react1.screen.getByRole('heading', {
                level: 1
            })).toHaveTextContent('Test Heading');
        });
        it('renders h2 correctly', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Typography.h2, {
                children: "Test Heading"
            }));
            expect(_react1.screen.getByRole('heading', {
                level: 2
            })).toHaveTextContent('Test Heading');
        });
        it('renders paragraph correctly', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Typography.p, {
                children: "Test paragraph"
            }));
            expect(_react1.screen.getByText('Test paragraph')).toBeInTheDocument();
        });
        it('applies custom className', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Typography.h1, {
                className: "custom-class",
                children: "Test Heading"
            }));
            expect(_react1.screen.getByRole('heading', {
                level: 1
            })).toHaveClass('custom-class');
        });
    });
    describe('Button', ()=>{
        it('renders button with text', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                children: "Click me"
            }));
            expect(_react1.screen.getByRole('button', {
                name: 'Click me'
            })).toBeInTheDocument();
        });
        it('handles click events', ()=>{
            const handleClick = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                onClick: handleClick,
                children: "Click me"
            }));
            _react1.fireEvent.click(_react1.screen.getByRole('button'));
            expect(handleClick).toHaveBeenCalledTimes(1);
        });
        it('shows loading state', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                loading: true,
                children: "Loading"
            }));
            const button = _react1.screen.getByRole('button');
            expect(button).toBeDisabled();
            expect(button).toHaveTextContent('Loading');
        });
        it('renders with icon', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                icon: "\uD83D\uDE80",
                children: "Launch"
            }));
            expect(_react1.screen.getByText('🚀')).toBeInTheDocument();
            expect(_react1.screen.getByText('Launch')).toBeInTheDocument();
        });
        it('applies different variants', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                variant: "primary",
                children: "Primary"
            }));
            expect(_react1.screen.getByRole('button')).toHaveClass('bg-purple-600');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                variant: "secondary",
                children: "Secondary"
            }));
            expect(_react1.screen.getByRole('button')).toHaveClass('bg-gray-100');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                variant: "danger",
                children: "Danger"
            }));
            expect(_react1.screen.getByRole('button')).toHaveClass('bg-red-600');
        });
        it('applies different sizes', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                size: "sm",
                children: "Small"
            }));
            expect(_react1.screen.getByRole('button')).toHaveClass('px-3');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Button, {
                size: "lg",
                children: "Large"
            }));
            expect(_react1.screen.getByRole('button')).toHaveClass('px-6');
        });
    });
    describe('Card', ()=>{
        it('renders card with content', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)(_DesignSystem.DesignSystem.Card, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        children: "Card Title"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        children: "Card content"
                    })
                ]
            }));
            expect(_react1.screen.getByText('Card Title')).toBeInTheDocument();
            expect(_react1.screen.getByText('Card content')).toBeInTheDocument();
        });
        it('applies different variants', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Card, {
                variant: "default",
                children: "Content"
            }));
            expect(_react1.screen.getByText('Content').parentElement).toHaveClass('bg-white');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Card, {
                variant: "elevated",
                children: "Content"
            }));
            expect(_react1.screen.getByText('Content').parentElement).toHaveClass('shadow-lg');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Card, {
                variant: "outlined",
                children: "Content"
            }));
            expect(_react1.screen.getByText('Content').parentElement).toHaveClass('border-2');
        });
        it('applies different padding sizes', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Card, {
                padding: "sm",
                children: "Content"
            }));
            expect(_react1.screen.getByText('Content').parentElement).toHaveClass('p-4');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Card, {
                padding: "lg",
                children: "Content"
            }));
            expect(_react1.screen.getByText('Content').parentElement).toHaveClass('p-8');
        });
    });
    describe('Badge', ()=>{
        it('renders badge with text', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                children: "New"
            }));
            expect(_react1.screen.getByText('New')).toBeInTheDocument();
        });
        it('applies different variants', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                variant: "default",
                children: "Default"
            }));
            expect(_react1.screen.getByText('Default')).toHaveClass('bg-gray-100');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                variant: "success",
                children: "Success"
            }));
            expect(_react1.screen.getByText('Success')).toHaveClass('bg-green-100');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                variant: "danger",
                children: "Danger"
            }));
            expect(_react1.screen.getByText('Danger')).toHaveClass('bg-red-100');
        });
        it('applies different sizes', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                size: "sm",
                children: "Small"
            }));
            expect(_react1.screen.getByText('Small')).toHaveClass('text-xs');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Badge, {
                size: "md",
                children: "Medium"
            }));
            expect(_react1.screen.getByText('Medium')).toHaveClass('text-sm');
        });
    });
    describe('Alert', ()=>{
        it('renders alert with message', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                children: "This is an alert"
            }));
            expect(_react1.screen.getByText('This is an alert')).toBeInTheDocument();
        });
        it('renders alert with title', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                title: "Alert Title",
                children: "Alert message"
            }));
            expect(_react1.screen.getByText('Alert Title')).toBeInTheDocument();
            expect(_react1.screen.getByText('Alert message')).toBeInTheDocument();
        });
        it('applies different variants', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                variant: "info",
                children: "Info"
            }));
            expect(_react1.screen.getByText('Info').parentElement?.parentElement).toHaveClass('bg-blue-50');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                variant: "success",
                children: "Success"
            }));
            expect(_react1.screen.getByText('Success').parentElement?.parentElement).toHaveClass('bg-green-50');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                variant: "warning",
                children: "Warning"
            }));
            expect(_react1.screen.getByText('Warning').parentElement?.parentElement).toHaveClass('bg-yellow-50');
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                variant: "danger",
                children: "Danger"
            }));
            expect(_react1.screen.getByText('Danger').parentElement?.parentElement).toHaveClass('bg-red-50');
        });
        it('handles close button', ()=>{
            const onClose = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Alert, {
                onClose: onClose,
                children: "Alert"
            }));
            _react1.fireEvent.click(_react1.screen.getByText('×'));
            expect(onClose).toHaveBeenCalledTimes(1);
        });
    });
    describe('Input', ()=>{
        it('renders input with label', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                label: "Email",
                name: "email"
            }));
            expect(_react1.screen.getByLabelText('Email')).toBeInTheDocument();
        });
        it('renders input with helper text', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                helperText: "Enter your email",
                name: "email"
            }));
            expect(_react1.screen.getByText('Enter your email')).toBeInTheDocument();
        });
        it('renders input with error', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                error: "Email is required",
                name: "email"
            }));
            expect(_react1.screen.getByText('Email is required')).toBeInTheDocument();
        });
        it('renders input with left icon', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                leftIcon: "\uD83D\uDCE7",
                name: "email"
            }));
            expect(_react1.screen.getByText('📧')).toBeInTheDocument();
        });
        it('renders input with right icon', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                rightIcon: "\uD83D\uDD0D",
                name: "search"
            }));
            expect(_react1.screen.getByText('🔍')).toBeInTheDocument();
        });
        it('handles value changes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Input, {
                name: "email"
            }));
            const input = _react1.screen.getByRole('textbox');
            _react1.fireEvent.change(input, {
                target: {
                    value: 'test@example.com'
                }
            });
            expect(input).toHaveValue('test@example.com');
        });
    });
    describe('Textarea', ()=>{
        it('renders textarea with label', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Textarea, {
                label: "Description",
                name: "description"
            }));
            expect(_react1.screen.getByLabelText('Description')).toBeInTheDocument();
        });
        it('renders textarea with helper text', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Textarea, {
                helperText: "Enter your description",
                name: "description"
            }));
            expect(_react1.screen.getByText('Enter your description')).toBeInTheDocument();
        });
        it('renders textarea with error', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Textarea, {
                error: "Description is required",
                name: "description"
            }));
            expect(_react1.screen.getByText('Description is required')).toBeInTheDocument();
        });
        it('handles value changes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Textarea, {
                name: "description"
            }));
            const textarea = _react1.screen.getByRole('textbox');
            _react1.fireEvent.change(textarea, {
                target: {
                    value: 'Test description'
                }
            });
            expect(textarea).toHaveValue('Test description');
        });
    });
    describe('Select', ()=>{
        const options = [
            {
                value: 'option1',
                label: 'Option 1'
            },
            {
                value: 'option2',
                label: 'Option 2'
            },
            {
                value: 'option3',
                label: 'Option 3',
                disabled: true
            }
        ];
        it('renders select with label', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Select, {
                label: "Choose option",
                options: options
            }));
            expect(_react1.screen.getByLabelText('Choose option')).toBeInTheDocument();
        });
        it('renders all options', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Select, {
                options: options
            }));
            expect(_react1.screen.getByText('Option 1')).toBeInTheDocument();
            expect(_react1.screen.getByText('Option 2')).toBeInTheDocument();
            expect(_react1.screen.getByText('Option 3')).toBeInTheDocument();
        });
        it('handles value changes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Select, {
                options: options
            }));
            const select = _react1.screen.getByRole('combobox');
            _react1.fireEvent.change(select, {
                target: {
                    value: 'option2'
                }
            });
            expect(select).toHaveValue('option2');
        });
    });
    describe('Modal', ()=>{
        it('renders modal when open', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Modal, {
                isOpen: true,
                onClose: jest.fn(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Modal content"
                })
            }));
            expect(_react1.screen.getByText('Modal content')).toBeInTheDocument();
        });
        it('does not render modal when closed', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Modal, {
                isOpen: false,
                onClose: jest.fn(),
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Modal content"
                })
            }));
            expect(_react1.screen.queryByText('Modal content')).not.toBeInTheDocument();
        });
        it('renders modal with title', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Modal, {
                isOpen: true,
                onClose: jest.fn(),
                title: "Modal Title",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Modal content"
                })
            }));
            expect(_react1.screen.getByText('Modal Title')).toBeInTheDocument();
        });
        it('handles close button click', ()=>{
            const onClose = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Modal, {
                isOpen: true,
                onClose: onClose,
                title: "Modal Title",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Modal content"
                })
            }));
            _react1.fireEvent.click(_react1.screen.getByText('×'));
            expect(onClose).toHaveBeenCalledTimes(1);
        });
        it('handles backdrop click', ()=>{
            const onClose = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Modal, {
                isOpen: true,
                onClose: onClose,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    children: "Modal content"
                })
            }));
            // Click on backdrop (first div with bg-black)
            const backdrop = document.querySelector('.bg-black');
            if (backdrop) {
                _react1.fireEvent.click(backdrop);
                expect(onClose).toHaveBeenCalledTimes(1);
            }
        });
    });
    describe('Tooltip', ()=>{
        it('renders tooltip on hover', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Tooltip, {
                content: "Tooltip text",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    children: "Hover me"
                })
            }));
            const button = _react1.screen.getByRole('button');
            _react1.fireEvent.mouseEnter(button);
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.getByText('Tooltip text')).toBeInTheDocument();
            });
        });
        it('hides tooltip on mouse leave', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Tooltip, {
                content: "Tooltip text",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    children: "Hover me"
                })
            }));
            const button = _react1.screen.getByRole('button');
            _react1.fireEvent.mouseEnter(button);
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.getByText('Tooltip text')).toBeInTheDocument();
            });
            _react1.fireEvent.mouseLeave(button);
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.queryByText('Tooltip text')).not.toBeInTheDocument();
            });
        });
    });
    describe('Skeleton', ()=>{
        it('renders single skeleton', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Skeleton, {
                className: "h-4 w-20"
            }));
            const skeleton = document.querySelector('.animate-pulse');
            expect(skeleton).toBeInTheDocument();
        });
        it('renders multiple skeleton lines', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Skeleton, {
                lines: 3
            }));
            const skeletons = document.querySelectorAll('.animate-pulse');
            expect(skeletons).toHaveLength(3);
        });
    });
    describe('Divider', ()=>{
        it('renders simple divider', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Divider, {}));
            const divider = document.querySelector('hr');
            expect(divider).toBeInTheDocument();
        });
        it('renders divider with text', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_DesignSystem.DesignSystem.Divider, {
                text: "Or"
            }));
            expect(_react1.screen.getByText('Or')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,