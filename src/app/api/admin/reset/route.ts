import { NextResponse } from "next/server"
import { getServerSession } from "next-auth/next"
import { authOptions } from "../../auth/[...nextauth]/route"
import { prisma } from "@/lib/prisma"
export async function POST() {
  try {
    const session = await getServerSession(authOptions)
    if (!session?.user?.email) {
      return NextResponse.json({ error: "Non authentifi√©" }, { status: 401 })
    }

    // V√©rifier si l'utilisateur est super admin
    if (session.user.email !== 'info@beriox.ca') {
      return NextResponse.json({ error: "Acc√®s refus√© - Super Admin requis" }, { status: 403 })
    }

    console.log(`üóëÔ∏è RESET initi√© par ${session.user.email} √† ${new Date().toISOString()}`)
    // Supprimer les donn√©es dans l'ordre correct (en respectant les contraintes de cl√©s √©trang√®res)
    console.log('Suppression des ExecutionLogs...')
    await prisma.executionLog.deleteMany()
    console.log('Suppression des WebhookEvents...')
    await prisma.webhookEvent.deleteMany()
    console.log('Suppression des Reports...')
    await prisma.report.deleteMany()
    console.log('Suppression des Deliverables...')
    await prisma.deliverable.deleteMany()
    console.log('Suppression des Briefs...')
    await prisma.brief.deleteMany()
    console.log('Suppression des Missions...')
    await prisma.mission.deleteMany()
    console.log('Suppression des AnalyticsConnections...')
    await prisma.analyticsConnection.deleteMany()
    // Optionnel: Reset des AgentPrompts (d√©commente si n√©cessaire)
    // console.log('Suppression des AgentPrompts...')
    // await prisma.agentPrompt.deleteMany()
    console.log('‚úÖ RESET termin√© avec succ√®s')
    return NextResponse.json({ 
      success: true,
      message: "Base de donn√©es reset√©e avec succ√®s",
      timestamp: new Date().toISOString(),
      deletedBy: session.user.email
    })
  } catch (error) {
    console.error('‚ùå Erreur lors du reset de la base de donn√©es:', error)
    return NextResponse.json(
      { 
        error: "Erreur lors du reset de la base de donn√©es",
        details: error instanceof Error ? error.message : "Erreur inconnue"
      },
      { status: 500 }
    )
  }
}
